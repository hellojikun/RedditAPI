'use strict';

var _redux = require('redux');

var combineReducers = _redux.combineReducers;

var _actions = require('./actions');

var SELECT_SUBREDDIT = _actions.SELECT_SUBREDDIT;
var INVALIDATE_SUBREDDIT = _actions.INVALIDATE_SUBREDDIT;
var REQUEST_POSTS = _actions.REQUEST_POSTS;
var RECEIVE_POSTS = _actions.RECEIVE_POSTS;
/**
 * Created by jk on 17-7-25.
 */
function selectedSubreddit() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'reactjs';
    var action = arguments[1];

    switch (action.type) {
        case SELECT_SUBREDDIT:
            return action.subreddit;
        default:
            return state;
    }
}

function posts() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
        isFetching: false,
        didInvalidate: false,
        items: []
    };
    var action = arguments[1];

    switch (action.type) {
        case INVALIDATE_SUBREDDIT:
            return Object.assign({}, state, {
                didInvalidate: true
            });
        case REQUEST_POSTS:
            return Object.assign({}, state, {
                isFetching: true,
                didInvalidate: false
            });
        case RECEIVE_POSTS:
            return Object.assign({}, state, {
                isFetching: false,
                didInvalidate: false,
                items: action.posts,
                lastUpdated: action.receivedAt
            });
        default:
            return state;
    }
}

function postsBySubreddit() {
    var _Object$assign;

    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var action = arguments[1];

    switch (action.type) {
        case INVALIDATE_SUBREDDIT:
        case RECEIVE_POSTS:
        case REQUEST_POSTS:
            return Object.assign({}, state, (_Object$assign = {}, _Object$assign[action.subreddit] = posts(state[action.subreddit], action), _Object$assign));
        default:
            return state;
    }
}

var rootReducer = combineReducers({
    postsBySubreddit: postsBySubreddit,
    selectedSubreddit: selectedSubreddit
});

module.exports = rootReducer;