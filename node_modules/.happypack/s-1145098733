'use strict';

var _react = require('react');

var React = _react;
var Component = _react.Component;

var _reactRedux = require('react-redux');

var Provider = _reactRedux.Provider;

var configureStore = require('../configureStore');

var AsyncApp = require('./AsyncApp');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by jk on 17-7-25.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var store = configureStore();

var Root = function (_Component) {
    _inherits(Root, _Component);

    function Root() {
        _classCallCheck(this, Root);

        return _possibleConstructorReturn(this, _Component.apply(this, arguments));
    }

    Root.prototype.render = function render() {
        return React.createElement(
            Provider,
            { store: store },
            React.createElement(AsyncApp, null)
        );
    };

    return Root;
}(Component);

module.exports = Root;