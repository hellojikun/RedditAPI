'use strict';

var _react = require('react');

var React = _react;
var Component = _react.Component;
var PropTypes = _react.PropTypes;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by jk on 17-7-25.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var Picker = function (_Component) {
    _inherits(Picker, _Component);

    function Picker() {
        _classCallCheck(this, Picker);

        return _possibleConstructorReturn(this, _Component.apply(this, arguments));
    }

    Picker.prototype.render = function render() {
        var _props = this.props,
            value = _props.value,
            _onChange = _props.onChange,
            options = _props.options;


        return React.createElement(
            'span',
            null,
            React.createElement(
                'h1',
                null,
                value
            ),
            React.createElement(
                'select',
                { onChange: function onChange(e) {
                        return _onChange(e.target.value);
                    },
                    value: value },
                options.map(function (option) {
                    return React.createElement(
                        'option',
                        { value: option, key: option },
                        option
                    );
                })
            )
        );
    };

    return Picker;
}(Component);

module.exports = Picker;


Picker.propTypes = {
    options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,
    value: PropTypes.string.isRequired,
    onChange: PropTypes.func.isRequired
};